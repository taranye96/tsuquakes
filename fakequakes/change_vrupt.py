#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Apr 12 17:56:43 2021

@author: tnye
"""

###############################################################################
# Script that changes the rupture onset times of the .rupt files generated by
# FakeQuakes by changing the shallow shear wave fraction. It also stores the
# original .rupt files in another folder. This script is used when varying
# rupture velocity and should be run after generating the ruptures and before
# calculating the Green's functions. 
###############################################################################

# Imports
import numpy as np
import sys
from os import makedirs, path, rename
from distutils.dir_util import copy_tree
from glob import glob
import geopy.distance
from obspy.taup import TauPyModel
from mudpy import fakequakes

def change_vrupt(home, project_name, model_name, shear_wave_fraction_shallow):
    
    print(f'shear wave fraction shallow = {shear_wave_fraction_shallow}')
    print(f'model_name = {model_name}')

    # Parameters
    rupt_dir = f'{home}{project_name}/output/ruptures'
    orig_rupt_dir = f'{home}{project_name}/output/orig_ruptures'
    
    # Rename original ruptures folder 
    if not path.exists(orig_rupt_dir):
        # Rename original ruptures folder 
        rename(rupt_dir, orig_rupt_dir)
    
        # Create new folder called 'ruptures' to store new rise time .rupt files in
        makedirs(rupt_dir)
        
        # Copy over .log files
        copy_tree(orig_rupt_dir, rupt_dir)
    
    # Gather original rupture files
    rupt_files = np.array(sorted(glob(f'{rupt_dir}/mentawai*.rupt')))
    log_files = np.array(sorted(glob(f'{rupt_dir}/*.log')))
    print(f'(rupt_files = {rupt_files}')

    # Loop through rupture files and change subfault onset time
    for i, rupt in enumerate(rupt_files):
        
        # Get parameters to calculate new onset times
        fault_array = np.genfromtxt(rupt)
        slip = np.sqrt(fault_array[:,8]**2 + fault_array[:,9]**2)
        mu = fault_array[:,13]
        hypocenter = [100.14, -3.49, 11.82]
        rise_time_depths = [10,15]
        M0 = sum(slip*fault_array[:,10]*fault_array[:,11]*mu)
        velmod = TauPyModel(model=home+project_name+'/structure/'+model_name.split('.')[0])

        # Open rupture model
        f = open(rupt, 'r')
        header = f.readline().rstrip('\n')
        
        # Calculate new onset times
        new_onset, length2fault = fakequakes.get_rupture_onset(home,project_name,slip,fault_array,
                    model_name,hypocenter,rise_time_depths, M0,velmod,sigma_rise_time=0.2,
                    shear_wave_fraction_shallow=shear_wave_fraction_shallow)
    
        # Change rupt_time column to be new rupture onset times
        fault_array[:,12] = new_onset
        
        # Save new .rupt file
        rupt_name = rupt.split('/')[-1]
        print(f'saving new .rupt file to {rupt_dir}/{rupt_name}')
        np.savetxt(f'{rupt_dir}/{rupt_name}', fault_array, delimiter='\t',
                   header=header, comments='', fmt='%s')
    
        # Calculate average rupture velocity
        lon_array = fault_array[:,1]
        lat_array = fault_array[:,2]
        vrupt = []
        
        for j in range(len(fault_array)):
            if new_onset[j] > 0:
                r = geopy.distance.geodesic((hypocenter[1], hypocenter[0]), (lat_array[j], lon_array[j])).km
                vrupt.append(r/new_onset[j])
    
        avg_vrupt = np.mean(vrupt)
        print(f'average vrupt = {avg_vrupt}')

        # Change average vrupt in .log file to be new vrupt
        log = log_files[i]
        f = open(log, 'r')
        list_of_lines = f.readlines()
        list_of_lines[-4] = 'Average Rupture Velocity (km/s): %.2f\n' % avg_vrupt
        f.close()

        f = open(log, 'w')
        f.writelines(list_of_lines)
        f.close()


